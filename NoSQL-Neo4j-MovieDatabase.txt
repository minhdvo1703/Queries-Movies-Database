1. Find all producers that produced the movie When Harry Met Sally. 

MATCH (producer:Person)-[:PRODUCED]->(movie{title:"When Harry Met Sally"}) 
RETURN producer.name


2. Find directors who have directed more than 2 movies.  Return the name of the director and the count of movies they directed, ordered by movie count in descending order.

MATCH(directors:Person)-[:DIRECTED]->(movie:Movie) 
WITH directors,count(movie) AS numMovies  
WHERE numMovies > 2 
RETURN directors.name, numMovies  ORDER BY numMovies desc


3. Find the actors who acted in 5+ movies and the movies in which they acted.  Return the name of the actor, and the title of the films, ordered by the number of films acted per actor in descending order.

MATCH (actors:Person)-[:ACTED_IN]->(movies:Movie)
WITH actors, count(movies) AS numMovies, collect(movies.title) AS Title 
WHERE numMovies >= 5 
RETURN actors.name, Title 
ORDER BY numMovies desc


4. Find the people who were the producer, writer, AND director (the same person who held all 3 roles) at the same time on a film. Return the names of the people and the titles of the films.

MATCH (person:Person)-[:WROTE]->(movies:Movie)<-[:DIRECTED]-(person:Person)-[:PRODUCED]->(movies:Movie)
RETURN person.name,movies.title


5. Find all the actors that are exactly 3 degrees away from Tom Hanks.  NOTE: In this case, we want to define a "degree" as a common connection between two people.  So, if Tom Hanks is connected to Gary Sinise by way of them both acting in Apollo 13, then that connection has a path length of 2, and we would consider Gary Sinise to be 1 degree away from Tom Hanks since they both acted in the same movie.

MATCH (tom:Person {name:"Tom Hanks"})-[:ACTED_IN*6]-(actors:Person)
RETURN DISTINCT actors.name


6. Update database to reflect new name ("Larry Wachowski") for director "Lana Wachowski".

MATCH (person:Person{name:'Lana Wachowski'})
SET person.name = 'Larry Wachowski'
RETURN person


7. Create a section of fun movies whose summary contains the keyword "fun".

MATCH (movie:Movie)<-[review:REVIEWED]-(reviewer:Person)  
WHERE review.summary CONTAINS 'fun' OR review.summary 
CONTAINS 'Fun' 
RETURN DISTINCT movie.title


8. List all the release years and count all movies released in that year.

MATCH (movies:Movie) 
RETURN movies.released,count(movies.title)


9. List all the movies whose rating >= 90.

MATCH (movie:Movie)<-[review:REVIEWED]-(reviewer:Person)  
WHERE review.rating >=90 
RETURN DISTINCT movie.title


10. List the top producers who are most likely to entertain new movies production hint: Producers with most movies produced.

MATCH (producer:Person)-[:PRODUCED]->(movie:Movie) 
RETURN producer.name, count(movie) 
ORDER BY count(movie) DESC LIMIT 5


11. List all the movies along with a number of reviews received. order the results by a number of reviews in descending order.

MATCH (reviewer:Person)-[review:REVIEWED]->(movie:Movie) 
RETURN movie.title,count(review) 
ORDER BY count(review) DESC


12. Find the shortest path between movies "The Matrix" and "The Matrix Reloaded".

MATCH p=shortestPath((m1:Movie {title:"The Matrix"})-[*]-(m2:Movie {title:"The Matrix Reloaded"})) 
RETURN p


13. List all the writers and the list of movies they have written.

MATCH (writer:Person)-[:WROTE]->(movies:Movie) 
RETURN writer.name,movies.title


14. List top 15 actors who have co-acted with each other the most. Ignore The Matrix trilogy for this analysis.

MATCH (a1:Person)-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(a2:Person) WITH a1, a2, count(m.title) as numMovies
WHERE id(a1) < id(p2) AND NOT m.title STARTS WITH "The Matrix" 
RETURN a1.name,a2.name 
ORDER BY numMovies desc limit 15


